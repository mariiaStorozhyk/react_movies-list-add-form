{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","hasTitileError","setTitileError","setDescription","setImgUrl","hasImgUrlError","setImgUrlError","setImdbUrl","hasImdbUrlError","setImdbUrlError","setImdbId","hasImdbIdError","setImdbIdError","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.810cdeda.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitileError, setTitileError] = useState(false);\n\n  const [description, setDescription] = useState('');\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n\n  const [imdbId, setImdbId] = useState('');\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n\n  const clearInputs = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const checkErrors = () => {\n    setTitileError(!title);\n    setImgUrlError(!imgUrl);\n    setImdbUrlError(!imdbUrl);\n    setImdbIdError(!imdbId);\n  };\n\n  const haldleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    checkErrors();\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      onAdd({\n        title, description, imgUrl, imdbUrl, imdbId,\n      });\n\n      clearInputs();\n    }\n  };\n\n  return (\n    <form\n      onSubmit={haldleSubmit}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        className={hasTitileError ? 'error' : ''}\n        value={title}\n        onChange={(event) => {\n          setTitle(event.target.value);\n          setTitileError(false);\n        }}\n      />\n\n      <input\n        type=\"text\"\n        placeholder=\"Description\"\n        value={description}\n        onChange={(event) => {\n          setDescription(event.target.value);\n        }}\n      />\n\n      <input\n        type=\"text\"\n        className={hasImgUrlError ? 'error' : ''}\n        placeholder=\"Image URL\"\n        value={imgUrl}\n        onChange={(event) => {\n          setImgUrl(event.target.value);\n          setImgUrlError(false);\n        }}\n      />\n\n      <input\n        type=\"text\"\n        className={hasImdbUrlError ? 'error' : ''}\n        placeholder=\"IMDB URL\"\n        value={imdbUrl}\n        onChange={(event) => {\n          setImdbUrl(event.target.value);\n          setImdbUrlError(false);\n        }}\n      />\n\n      <input\n        type=\"text\"\n        className={hasImdbIdError ? 'error' : ''}\n        placeholder=\"IMDB Id\"\n        value={imdbId}\n        onChange={(event) => {\n          setImdbId(event.target.value);\n          setImdbIdError(false);\n        }}\n      />\n\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (\n    newMovie: Movie,\n  ) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}